server.port=8082

server.servlet.context-path=/sigp-catequese

spring.datasource.url=jdbc:mysql://localhost/sigp_catequese?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

###definicao do dialecto do Hibernate
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=co.ao.sigp.catequese.core.util.mysqldialect.MySQLCustomDialect
spring.jpa.properties.hibernate.metadata_builder_contributor=co.ao.sigp.catequese.core.util.mysqldialect.SqlFunctions

server.error.whitelabel.enabled=false
server.error.include-stacktrace=always

###criar o ddl apartir do mapeamento das classes
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

#usar apenas em ambiente de desenvolvimento
spring.jpa.show-sql=true

################################################################
# Pool de conexoes com hikari								   #
################################################################

###define que no maximo serao criadas 5 pool de conexoes
spring.datasource.hikari.maximum-pool-size=5

###define que no minimo serao criadas 5 pool de conexoes
spring.datasource.hikari.minimum-idle=3

###define o tempo maximo para um recurso ser libertado apos uso
###10000 = 10s
spring.datasource.hikari.idle-timeout=10000

###Definir a localizacao que desejamos que o flyway encontre os scripts de migracao e de teste/callback
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


